<UserControl x:Class="IntelliStretch.UI.UIPrelimSettings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:UserControls="clr-namespace:IntelliStretch.UserControls"
    xmlns:value_converters="clr-namespace:IntelliStretch.ValueConverters"
    x:Name="uiPrelimSettings" Loaded="uiPrelimSettings_Loaded">

    <UserControl.Resources>
        <value_converters:BoolScaleConverter x:Key="boolScaleConverter" />

        <!-- Start Styles-->

        <!-- Start: TabItem Styles -->
        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Margin" Value="0 0 5 0"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid SnapsToDevicePixels="True">
                            <Border CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Margin="{TemplateBinding Margin}"/>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="True"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"
                                          ContentSource="Header"
                                          Focusable="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                    Value="{DynamicResource SecondaryBlueColor}"/>
                                <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryGrayColor}"/>

                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background"
                                    Value="{DynamicResource PrimaryBlueColor}"/>
                                <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryTextColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End: TabItem Styles -->

        <!-- Start: TabControl Styles -->
        <Style x:Key="TabControlStyle" TargetType="TabControl">
            <Setter Property="Background" Value="{DynamicResource SecondaryBlueColor}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TabPanel Grid.Row="0"
                                  Background="Transparent"
                                  IsItemsHost="True"/>
                            <Border Grid.Row="1" 
                                CornerRadius="5"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                                <ContentPresenter ContentSource="SelectedContent"
                                              SnapsToDevicePixels="True"
                                              Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End: TabControl Styles-->

        <!-- Start: Button Style -->
        <Style TargetType="Button" x:Key="GeneralButtonStyle">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid SnapsToDevicePixels="True">
                            <Border CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Margin="{TemplateBinding Margin}"/>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="True"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Margin}"
                                          ContentSource="Content"
                                          Focusable="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                    Value="{DynamicResource PrimaryGrayColor}"/>
                                <Setter Property="Foreground"
                                    Value="{DynamicResource SecondaryBlueColor}"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
            </Style.Resources>
        </Style>
        <!-- End: Button Style -->
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Slider Grid.Column="0" x:Name="sliderValuePicker" Margin="20" Orientation="Vertical" SmallChange="1" IsSnapToTickEnabled="True" ValueChanged="sliderValuePicker_ValueChanged" Grid.RowSpan="1"/>

        <Grid RenderTransformOrigin="0.5,0.5" Grid.Column="2" HorizontalAlignment="Center" Panel.ZIndex="-1">
            <Image x:Name="imgGrid" Source="{Binding GuideLinesImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right" Margin="50"/>
            <Image x:Name="imgNeutral" Source="{Binding NeutralImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right" Margin="50"/>
            <Image x:Name="imgFlexion" Source="{Binding FlexionImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right" Visibility="Collapsed" Margin="50"/>
            <Image x:Name="imgExtension" Source="{Binding ExtensionImage, ElementName=uiPrelimSettings}" HorizontalAlignment="Right" Visibility="Collapsed" Margin="50"/>
        </Grid>

        <UserControls:EmbeddedDialog 
            DialogTitle="Caution" 
            DialogText="Please make sure your stop switch is enabled !" 
            DialogWidth="240"
            VerticalAlignment="Bottom"
            HorizontalAlignment="Right"
            Grid.Column="2"/>

        <StackPanel Orientation="Vertical" Grid.Column="1">
            <StackPanel Orientation="Horizontal">
                <ToggleButton x:Name="WristControl" Style="{DynamicResource ToggleButtonStyle}" Content="Wrist"
                              Width="80" Height="30" Margin="0,0,10,3" Click="JointControl_Click"/>
                <ToggleButton x:Name="MCPControl" Style="{DynamicResource ToggleButtonStyle}" Content="MCP"
                                Width="80" Height="30" Margin="10,0,0,3" Click="JointControl_Click"/>
            </StackPanel>

            <TextBlock 
                        Height="24" 
                        Text="Neutral Position" 
                        TextWrapping="Wrap" 
                        FontWeight="Regular"
                        Foreground="{DynamicResource PrimaryTextColor}"
                        FontSize="16"
                        Margin="10,5,5,0"/>

            <Button
                        x:Name="setNeutral"
                        Content="Set zero"
                        GotFocus="setting_GotFocus"
                        Height="36"
                        FontSize="16"
                        Margin="5,0,5,5">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#FF1039F2"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Regular"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>

                        <Style.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5" />
                            </Style>
                        </Style.Resources>
                    </Style>
                </Button.Style>
            </Button>

            <UserControls:FlatTextButton x:Name="setFlexion" FontWeight="Medium" Caption="{Binding FlexionName, ElementName=uiPrelimSettings, StringFormat=Max {0}:}" ButtonText="Measure" GotFocus="setting_GotFocus" ButtonClick="Measure_ButtonClick"/>

            <UserControls:FlatTextButton x:Name="setExtension" FontWeight="Medium" Caption="{Binding ExtensionName, ElementName=uiPrelimSettings, StringFormat=Max {0}:}" Margin="0,5" 
                         ButtonText="Measure" GotFocus="setting_GotFocus" ButtonClick="Measure_ButtonClick"/>

            <Border x:Name="exRangeBdr" BorderThickness="2" CornerRadius="5" GotFocus="exRangeBdr_GotFocus" LostFocus="exRangeBdr_LostFocus">
                <StackPanel Margin="10,5">
                    <TextBlock  Height="24" Text="Extra Range" TextWrapping="Wrap" Foreground="{DynamicResource PrimaryTextColor}" FontSize="16" FontWeight="Regular"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="200">
                        <TextBox x:Name="setExRange" Height="28" Width="100" Style="{DynamicResource TextBoxStyle}" Margin="0,0,20,0"/>
                        <UserControls:HorizontalScroller HorizontalAlignment="Right"/>
                    </StackPanel>
                </StackPanel>
            </Border>

            <Button x:Name="btnApplyGeneralSettings" Content="Set" Height="50" Margin="0,25,0,0" 
                    HorizontalAlignment="Stretch" Click="btnApplyGeneralSettings_Click" FontSize="24">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="Regular"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>

                        <Style.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="5" />
                            </Style>
                        </Style.Resources>
                    </Style>
                </Button.Style>
            </Button>

            <UserControls:EmbeddedDialog
                Margin="0,25"
                x:Name="txtDataInfo"
                DialogTitle="Control Feedback"
                DialogWidth="240"/>


        </StackPanel>

    </Grid>
</UserControl>
