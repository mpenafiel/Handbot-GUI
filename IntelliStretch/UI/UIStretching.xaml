<UserControl x:Class="IntelliStretch.UI.UIStretching"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:UserControls="clr-namespace:IntelliStretch.UserControls"
    xmlns:value_converters="clr-namespace:IntelliStretch.ValueConverters"
    x:Name="uiStretching" Loaded="uiStretching_Loaded">
    <UserControl.Resources>
        
        <ResourceDictionary>
            <!-- Colors -->
            <SolidColorBrush x:Key="PrimaryBlueColor" Color="#348EF6"/>
            <SolidColorBrush x:Key="SecondaryBlueColor" Color="#EFF2FF"/>

            <SolidColorBrush x:Key="PrimaryTextColor" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="SecondaryTextColor" Color="#BBC1D1"/>
            <SolidColorBrush x:Key="TertiaryTextColor" Color="Gray"/>

            <SolidColorBrush x:Key="PrimaryGrayColor" Color="#BBC1D1"/>
            <SolidColorBrush x:Key="SecondaryGrayColor" Color="Gray"/>

            <!-- Start: Button Style -->
            <Style TargetType="Button" x:Key="GeneralButtonStyle">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid SnapsToDevicePixels="True">
                                <Border CornerRadius="5"
             Background="{TemplateBinding Background}"
             BorderThickness="{TemplateBinding BorderThickness}"
             BorderBrush="{TemplateBinding BorderBrush}"
             Margin="{TemplateBinding Margin}"/>
                                <ContentPresenter HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       SnapsToDevicePixels="True"
                       RecognizesAccessKey="True"
                       Margin="{TemplateBinding Margin}"
                       ContentSource="Content"
                       Focusable="False"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background"
                                             Value="{DynamicResource PrimaryGrayColor}"/>
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource SecondaryBlueColor}"/>

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Style.Resources>
            </Style>
            <!-- End: Button Style -->

            <!-- Start: Button Style -->
            <Style TargetType="Button" x:Key="GeneralButtonStyle2">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource SecondaryBlueColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource TertiaryTextColor}"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid SnapsToDevicePixels="True">
                                <Border CornerRadius="5"
                                         Background="{TemplateBinding Background}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Margin="{TemplateBinding Margin}"/>
                                <ContentPresenter HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    SnapsToDevicePixels="True"
                                                    RecognizesAccessKey="True"
                                                    Margin="{TemplateBinding Margin}"
                                                    ContentSource="Content"
                                                    Focusable="False"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background"
                                            Value="{DynamicResource PrimaryGrayColor}"/>
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource SecondaryBlueColor}"/>

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>


                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Style.Resources>
            </Style>
            <!-- End: Button Style -->

            <value_converters:BoolScaleConverter x:Key="boolScaleConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/TabPanelStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        
        <UserControls:ImageButton x:Name="btnStretchingCtrl" Margin="30,30,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="160" Height="80" 
                                  Image="../images/Start.png" Orientation="Horizontal" Text="Start  " FontSize="26.667" Click="btnStretchingCtrl_Click" />
        <UserControls:StopWatch x:Name="stopWatchStretch" Margin="32,128,0,0" Width="156" Height="64" Foreground="{DynamicResource TertiaryTextColor}" FontSize="53.333" 
                   HorizontalAlignment="Left" VerticalAlignment="Top" Tick="stopWatchStretch_Tick" />

        <Border VerticalAlignment="Bottom" Width="160" BorderBrush="Blue" BorderThickness="1" HorizontalAlignment="Left" CornerRadius="10">
            <StackPanel>
                <UserControls:ColorToggleButton x:Name="btnStretchMode" Margin="24,20" Height="44" Color="Yellow" TopColor="IndianRed" ButtonCornerRadius="22" Text="Intelligent" Click="btnStretchMode_Click" Visibility="{Binding ModeSelectionVisibility, ElementName=uiStretching}"/>
                <Button x:Name="btnDefaultStretch" Style="{DynamicResource GeneralButtonStyle}" Content="Default" Width="150" Click="btnDefaultStretch_Click" Margin="5"/>
                
                
            </StackPanel>
        </Border>
        
        <Grid Grid.Column="1">
            <TabControl x:Name="tabStretching" Margin="0,30,20,20" TabStripPlacement="Right" Background="{x:Null}" Style="{StaticResource RightTabStyle}" SelectionChanged="tabStretching_SelectionChanged">
                <!-- Config -->
                <TabItem x:Name="tabConfig" Style="{StaticResource BtnTabItemStyle}">
                    <TabItem.Header>
                        <Image Source="../images/Options.png" />
                    </TabItem.Header>
                    <Grid>
                        <Border Background="{DynamicResource SecondaryBlueColor}" CornerRadius="5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="80" />
                                </Grid.RowDefinitions>
                                <GroupBox Margin="12,8" Header="General" FontSize="18.667" BorderBrush="#FF0046D5" FontWeight="Bold" Foreground="{DynamicResource TertiaryTextColor}">
                                    <UniformGrid Columns="2">
                                        <UserControls:TextSlider x:Name="sliderStretchDuration" Text="Duration [min]:" Minimum="1" Maximum="100"/>
                                        <UserControls:TextSlider x:Name="sliderStretchHoldTime"  Text="Holding Time [sec]:" Maximum="100" />
                                    </UniformGrid>
                                </GroupBox>
                                <GroupBox Grid.Row="1" Margin="12,8" Header="Velocity [deg/sec]" FontSize="18.667" BorderBrush="#FF0046D5" FontWeight="Bold" Foreground="{DynamicResource TertiaryTextColor}">
                                    <UniformGrid Columns="2">
                                        <UserControls:TextSlider x:Name="sliderStretchFlexV" Minimum="5" Maximum="60" TickFrequency="5"  
                                                             Text="{Binding Path=FlexionName, ElementName=uiStretching, StringFormat={}{0}:}" />
                                        <UserControls:TextSlider x:Name="sliderStretchExtV" Minimum="5" Maximum="60" TickFrequency="5"  
                                                             Text="{Binding Path=ExtensionName, ElementName=uiStretching, StringFormat={}{0}:}" />
                                    </UniformGrid>
                                </GroupBox>
                                <GroupBox Grid.Row="2" Margin="12,8" Header="Torque Limit [Nm]" FontSize="18.667" BorderBrush="#FF0046D5" FontWeight="Bold" Foreground="{DynamicResource TertiaryTextColor}">
                                    <UniformGrid Columns="2">
                                        <UserControls:TextSlider x:Name="sliderStretchFlexTq" Minimum="1" Maximum="{Binding FlexionTorqueMax, ElementName=uiStretching}"   
                                                             Text="{Binding Path=FlexionName, ElementName=uiStretching, StringFormat={}{0}:}" />
                                        <UserControls:TextSlider x:Name="sliderStretchExtTq"  Minimum="1" Maximum="{Binding ExtensionTorqueMax, ElementName=uiStretching}"   
                                                             Text="{Binding Path=ExtensionName, ElementName=uiStretching, StringFormat={}{0}:}" />
                                    </UniformGrid>
                                </GroupBox>
                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Button x:Name="btnSaveDefaultStretch" Style="{DynamicResource GeneralButtonStyle}" Content="Save" Width="150" Click="btnSaveDefaultStretch_Click"/>
                                    <Button x:Name="btnCancelStretchProtocol" Grid.Column="2" Content="Cancel" Style="{DynamicResource GeneralButtonStyle2}" Width="150" Click="btnCancelStretchProtocol_Click"/>
                                    <Button x:Name="btnAcceptStretchProtocol" Grid.Column="3" Style="{DynamicResource GeneralButtonStyle}" Width="150" Content="Accept" Click="btnAcceptStretchProtocol_Click"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>

                </TabItem>
                
                <!-- Animation ankle demonstration -->
                <TabItem x:Name="tabDemoAnkle" Style="{StaticResource BtnTabItemStyle}">
                    <TabItem.Header>
                        <Image Source="../images/Ankle_Stretching.png" />
                    </TabItem.Header>
                    <Grid>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.63*" />
                                <RowDefinition Height="0.12*" />
                                <RowDefinition Height="0.25*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.25*"/>
                                <ColumnDefinition Width="0.20*"/>
                                <ColumnDefinition Width="0.12*"/>
                                <ColumnDefinition Width="0.08*"/>
                                <ColumnDefinition Width="0.35*"/>
                            </Grid.ColumnDefinitions>
                            <Image Source="../images/3D_grid.png" Stretch="Uniform" Margin="0,173,0,0" Grid.RowSpan="3" Grid.ColumnSpan="5" VerticalAlignment="Bottom" />
                            <Image x:Name="imgLeg" Source="../images/leg_part.png" Stretch="Uniform" Grid.Column="2" VerticalAlignment="Bottom" Grid.ColumnSpan="2" />
                            <Image x:Name="imgFoot" Source="../images/shoe.png" Stretch="Uniform" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="2"  />
                        </Grid> 
                        <TextBlock Name="txtAnkleDataInfo" FontSize="24" Foreground="White" Height="180.054" HorizontalAlignment="Right" Margin="10,10,0,0" VerticalAlignment="Top" Width="250" />
                    </Grid>
                </TabItem>

                <!-- Animation elbow demonstration -->
                <TabItem x:Name="tabDemoElbow" Style="{StaticResource BtnTabItemStyle}">
                    <TabItem.Header>
                        <Image Source="../images/Elbow_Stretching.png" />
                    </TabItem.Header>
                    <Grid>
                        <Grid RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="{Binding IsReflected, ElementName=uiStretching, Converter={StaticResource boolScaleConverter}, Mode=OneWay}" ScaleY="1" />
                            </Grid.RenderTransform>
                            <Image Source="../images/3D_grid.png" Stretch="Uniform" Margin="0,173,0,0" />
                            <Image Source="../images/Upper_arm.png" Margin="50" Stretch="Uniform" />
                            <Image x:Name="imgForearm" Source="../images/Forearm.png" Margin="50" Stretch="Uniform" />                        
                        </Grid>                     
                        <TextBlock Name="txtElbowDataInfo" FontSize="24" Foreground="White" Height="180.054" HorizontalAlignment="Right" Margin="10,10,0,0" VerticalAlignment="Top" Width="250" />
                    </Grid>
                </TabItem>

                <!-- Animation wrist demonstration -->
                <TabItem x:Name="tabDemoWrist" Style="{StaticResource BtnTabItemStyle}">
                    <TabItem.Header>
                        <Image Source="../images/Wrist_Stretching.png" />
                    </TabItem.Header>
                    <Grid>
                        <Grid RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="{Binding IsReflected, ElementName=uiStretching, Converter={StaticResource boolScaleConverter}, Mode=OneWay}" ScaleY="1" />
                            </Grid.RenderTransform>
                            <Image Source="../images/3D_grid.png" Stretch="Uniform" Margin="0,173,0,0" />
                            <Image x:Name="imgWrist" Source="../images/Wrist_hand_part.png" Margin="50" Stretch="Uniform" />
                        </Grid>
                        <TextBlock Name="txtWristDataInfo" FontSize="24" Foreground="{DynamicResource TertiaryTextColor}" Height="180.054" HorizontalAlignment="Right" Margin="10,10,0,0" VerticalAlignment="Top" Width="250" />
                    </Grid>
                </TabItem>

                <!-- Animation knee demonstration -->
                <TabItem x:Name="tabDemoKnee" Style="{StaticResource BtnTabItemStyle}">
                    <TabItem.Header>
                        <Image Source="../images/Knee_Stretching.png" />
                    </TabItem.Header>
                    <Grid>
                        <Grid>
                            <Image Source="../images/3D_grid.png" Stretch="Uniform" Margin="0,173,0,0" Grid.RowSpan="3" Grid.ColumnSpan="5" VerticalAlignment="Bottom" />
                            <Image Source="../images/Knee_thigh_part.png" Stretch="Uniform" Grid.Column="2" VerticalAlignment="Bottom" Grid.ColumnSpan="2" />
                            <Image x:Name="imgKnee" Source="../images/Knee_leg_part.png" Stretch="Uniform" VerticalAlignment="Bottom" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="2"  />
                        </Grid>
                        <TextBlock Name="txtKneeDataInfo" FontSize="24" Foreground="White" Height="180.054" HorizontalAlignment="Right" Margin="10,10,0,0" VerticalAlignment="Top" Width="250" />
                    </Grid>
                </TabItem>

            </TabControl>
        </Grid>        
    </Grid>
</UserControl>
